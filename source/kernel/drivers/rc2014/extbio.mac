
RS232_ID		EQU	8
GET_INFO_TABLE_FN	EQU	0

WRSLT			EQU	00014h
GSLOT1			EQU	0402Dh
CALBNK			EQU	04042h

RS232_JUMP_TABLE	EQU	07BD0h
;-----------------------------------------------------------------------------
;
; Extended BIOS hook.
; Works the expected way, except that it must return
; D'=1 if the old hook must be called, D'=0 otherwise.
; It is entered with D'=1.

	PUBLIC	DRV_EXTBIO
	EXTRN	PRINT

DRV_EXTBIO:
	PUSH	AF
	LD	A, D
	OR	E
	JR	Z, GET_DEVICE_ID

	LD	A, D
	CP	RS232_ID
	JR	NZ, NOT_US			; NOT US

	LD	A, E
	CP	GET_INFO_TABLE_FN
	JR	Z, GET_INFO_TABLE

NOT_US:
	POP	AF
	RET

GET_DEVICE_ID:
	pop	af
	PUSH	DE
	PUSH	BC
	LD	E, RS232_ID
	LD	A, B
	CALL	WRSLT
	INC	HL
	POP	BC
	POP	DE
	RET


GET_INFO_TABLE:
	POP	AF
	PUSH	DE
	PUSH	BC
	XOR	A
	LD	IX, GSLOT1
	CALL	CALBNK		; OUR SLOT IN A
				; REQUEST SLOT IN B
	LD	E, A
	LD	A, B
	CALL	WRSLT
	POP	BC
	PUSH	BC
	INC	HL

	LD	E, LOW RS232_JUMP_TABLE
	LD	A, B
	CALL	WRSLT
	POP	BC
	PUSH	BC
	INC	HL

	LD	E, HIGH RS232_JUMP_TABLE
	LD	A, B
	CALL	WRSLT
	POP	BC
	INC	HL

	POP	DE
	RET

; RS232_JUMP_TABLE:
; 	DEFB	0		; MSX serial features (no TxReady INT, No Sync detect, No Timer INT, No CD, No RI)
; 	DEFB	1		; version number
; 	DEFB	0		; reserved for future expansion
; 	JP	INIT		; initialize RS232C port
; 	JP	OPEN		; open RS232C port
; 	JP	STAT		; ReaD STATus
; 	JP	GETCHR		; reveive data
; 	JP	SNDCHR		; send data
; 	JP	CLOSE		; close RS232C port
; 	JP	EOF		; tell EOF code received
; 	JP	LOC		; reports number of characters in the
; 				; receiver buffer
; 	JP	LOF		; reports number of free space left in the
; 				; receiver buffer
; 	JP	BACKUP		; back up a character
; 	JP	SNDBRK		; send break character
; 	JP	DTR		; turn on/off DTR line
; 	JP	SETCHN		; set channel number

; INIT:				; initialize RS232C port
; 	ld b,b
; 	jr $+2

; 	; Install fossil driver as well???

; 	; LD	A, 'R'
; 	; LD	(FOSSIL_MARK_1), A
; 	; LD	A, 'X'
; 	; LD	(FOSSIL_MARK_2), A


; 	; ; LD	HL, 21*3
; 	; ; CALL	ALLOC
; 	; LD	Hl, FOSSIL_JUMP_TABLE
; 	; LD	(FOSSIL_JUMP_TABLE_REF), HL
; 	; CALL	GETSL10
; 	; LD	(FOSSIL_JUMP_TABLE_SLOT), A

; 	LD	DE, MSG
; 	CALL	PRINT

; 	XOR	A
; 	RET


; MSG:	DB	"Are we inited yet.\r\n", 0

; OPEN:		; open RS232C port
; 	RET
; STAT:		; ReaD STATus
; 	RET
; GETCHR:		; reveive data
; 	RET
; SNDCHR:		; send data
; 	RET
; CLOSE:		; close RS232C port
; 	RET
; EOF:		; tell EOF code received
; 	RET

; LOC:
; 	ld b,b
; 	jr $+2
; 	LD	HL, 16 		; reports number of characters in the
; 	RET			; receiver buffer

; LOF:		; reports number of free space left in the
; ;: receiver buffer
; 	RET
; BACKUP:		; back up a character
; 	RET
; SNDBRK:		; send break character
; 	RET
; DTR:		; turn on/off DTR line
; 	RET
; SETCHN:		; set channel number
; 	RET

	END
